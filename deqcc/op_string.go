// Code generated by "stringer -type=Op"; DO NOT EDIT

package deqcc

import "fmt"

const _Op_name = "OpDoneOpMulFOpMulVOpMulFVOpMulVFOpDivFOpAddFOpAddVOpSubFOpSubVOpEqFOpEqVOpEqSOpEqEOpEqFNCOpNeFOpNeVOpNeSOpNeEOpNeFNCOpLeOpGeOpLtOpGtOpLoadFOpLoadVOpLoadSOpLoadENTOpLoadFLDOpLoadFNCOpAddressOpStoreFOpStoreVOpStoreSOpStoreENTOpStoreFLDOpStoreFNCOpStorepFOpStorepVOpStorepSOpStorepENTOpStorepFLDOpStorepFNCOpReturnOpNotFOpNotVOpNotSOpNotENTOpNotFNCOpIfOpIfNotOpCall0OpCall1OpCall2OpCall3OpCall4OpCall5OpCall6OpCall7OpCall8OpStateOpGotoOpAndOpOrOpBitAndOpBitOr"

var _Op_index = [...]uint16{0, 6, 12, 18, 25, 32, 38, 44, 50, 56, 62, 67, 72, 77, 82, 89, 94, 99, 104, 109, 116, 120, 124, 128, 132, 139, 146, 153, 162, 171, 180, 189, 197, 205, 213, 223, 233, 243, 252, 261, 270, 281, 292, 303, 311, 317, 323, 329, 337, 345, 349, 356, 363, 370, 377, 384, 391, 398, 405, 412, 419, 426, 432, 437, 441, 449, 456}

func (i Op) String() string {
	if i >= Op(len(_Op_index)-1) {
		return fmt.Sprintf("Op(%d)", i)
	}
	return _Op_name[_Op_index[i]:_Op_index[i+1]]
}
